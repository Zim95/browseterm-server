# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: job-manager-service-account
  namespace: ${NAMESPACE}
---
# Cluster Role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: job-manager
rules:
- apiGroups: ["batch", ""]
  resources: ["jobs", "cronjobs", "secrets"]
  verbs: ["create", "delete", "update", "get", "list", "watch"]
---
# Cluster Role Binding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: job-manager-binding
subjects:
- kind: ServiceAccount
  name: job-manager-service-account
  namespace: ${NAMESPACE}
roleRef:
  kind: ClusterRole
  name: job-manager
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: browseterm-server-development
  namespace: ${NAMESPACE}
  labels:
    app: browseterm-server-development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: browseterm-server-development
  template:
    metadata:
      labels:
        app: browseterm-server-development
    spec:
      serviceAccountName: job-manager-service-account
      containers:
      - name: browseterm-server-development
        image: ${REPO_NAME}/browseterm-server-development:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 9999
        env:
        - name: CONTAINER_MAKER_SERVER_KEY
          valueFrom:
            secretKeyRef:
              name: container-maker-development-service-certs
              key: server.key
        - name: CONTAINER_MAKER_SERVER_CRT
          valueFrom:
            secretKeyRef:
              name: container-maker-development-service-certs
              key: server.crt
        - name: CONTAINER_MAKER_CLIENT_KEY
          valueFrom:
            secretKeyRef:
              name: container-maker-development-service-certs
              key: client.key
        - name: CONTAINER_MAKER_CLIENT_CRT
          valueFrom:
            secretKeyRef:
              name: container-maker-development-service-certs
              key: client.crt
        - name: CONTAINER_MAKER_CA_CRT
          valueFrom:
            secretKeyRef:
              name: container-maker-development-service-certs
              key: ca.crt
        - name: CERT_MANAGER_CRON_JOB_NAME
          value: cert-manager
        - name: CERT_MANAGER_CRON_JOB_NAMESPACE
          value: ${NAMESPACE}
        volumeMounts:
        - name: app-code
          mountPath: /app
      volumes:
      - name: app-code
        hostPath:
          path: ${HOSTPATH}
          type: DirectoryOrCreate
